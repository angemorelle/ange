#!/bin/bash

# üîó Script de configuration Blockchain pour le syst√®me √©lectoral

echo "üîó Configuration de l'environnement Blockchain..."

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function pour afficher les messages
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# V√©rifier si nous sommes dans le bon r√©pertoire
if [ ! -d "ElectionContrat" ] || [ ! -d "backend" ]; then
    log_error "Veuillez ex√©cuter ce script depuis la racine du projet (r√©pertoire 'ange')"
    log_info "R√©pertoire actuel: $(pwd)"
    log_info "Contenu: $(ls -la)"
    exit 1
fi

echo
log_info "√âtape 1: Installation des d√©pendances backend..."
cd backend
if npm install; then
    log_success "D√©pendances backend install√©es"
else
    log_error "Erreur lors de l'installation des d√©pendances backend"
    exit 1
fi

echo
log_info "√âtape 2: Installation des d√©pendances smart contracts..."
cd ../ElectionContrat
if npm install; then
    log_success "D√©pendances smart contracts install√©es"
else
    log_error "Erreur lors de l'installation des d√©pendances smart contracts"
    exit 1
fi

echo
log_info "√âtape 3: V√©rification de Ganache..."
if pgrep -f "ganache" > /dev/null; then
    log_success "Ganache est en cours d'ex√©cution"
else
    log_warning "Ganache n'est pas d√©tect√©"
    echo "         Pour d√©marrer Ganache :"
    echo "         1. Installer : npm install -g ganache-cli"
    echo "         2. D√©marrer : ganache-cli -p 7545 -h 0.0.0.0 --deterministic"
    echo
fi

echo
log_info "√âtape 4: Test de Web3..."
cd ../backend
if node -e "const { Web3 } = require('web3'); const web3 = new Web3('http://localhost:7545'); console.log('Web3 connect√© :', web3.version);" 2>/dev/null; then
    log_success "Web3 fonctionne correctement"
else
    log_warning "Impossible de se connecter √† Web3 (Ganache requis)"
fi

echo
log_info "√âtape 5: Compilation des smart contracts..."
cd ../ElectionContrat
if npx truffle compile; then
    log_success "Smart contracts compil√©s"
else
    log_error "Erreur lors de la compilation"
fi

echo
log_info "√âtape 6: D√©ploiement des smart contracts..."
if npx truffle migrate --reset; then
    log_success "Smart contracts d√©ploy√©s"
    
    # Copier l'ABI vers le frontend
    if [ -f "build/contracts/ElectionDapp.json" ]; then
        cp build/contracts/ElectionDapp.json ../frontend/src/abis/
        log_success "ABI copi√© vers le frontend"
    fi
else
    log_warning "Erreur lors du d√©ploiement (v√©rifiez que Ganache est d√©marr√©)"
fi

echo
log_info "√âtape 7: Nettoyage..."
cd ../backend
rm -f test_web3.js
log_success "Fichiers temporaires supprim√©s"

echo
echo "üéâ Configuration termin√©e !"
echo
echo "üìã Pour d√©marrer le syst√®me complet :"
echo "   ./start.sh"
echo
echo "üîß Commandes utiles :"
echo "   - Compiler les contracts : cd ElectionContrat && npm run compile"
echo "   - D√©ployer les contracts : cd ElectionContrat && npm run migrate"
echo "   - Console truffle       : cd ElectionContrat && npm run console"
echo

cd ../ 